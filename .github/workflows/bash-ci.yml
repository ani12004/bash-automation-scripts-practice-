# .github/workflows/bash-ci.yml

name: Bash Script CI

# This workflow runs on any push to any branch.
on: [push]

jobs:
  # The main job is called 'test-scripts'.
  test-scripts:
    # Use a matrix strategy to run on multiple operating systems.
    strategy:
      matrix:
        os: [ubuntu-latest, ubuntu-20.04]

    # Define the runner based on the matrix variable.
    runs-on: ${{ matrix.os }}

    # Environment variable pointing to the location of your scripts.
    # Set to '.' because your scripts are in the root directory.
    env:
      SCRIPT_DIR: .

    steps:
      # Step 1: Check out your repository code.
      - name: Check out repository code
        uses: actions/checkout@v4

      # Step 2: Install dependencies (shellcheck and shfmt).
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck shfmt

      # Step 3: Run linter and formatter checks.
      # This is similar to running tests in the Python example.
      - name: Lint and Format Check
        run: |
          echo "Running ShellCheck linter..."
          find ${{ env.SCRIPT_DIR }} -type f -name "*.sh" -exec shellcheck {} +

          echo "Checking formatting with shfmt..."
          shfmt -d ${{ env.SCRIPT_DIR }}

      # Step 4: Run the scripts as a basic execution test.
      - name: Run Scripts (Basic Test)
        run: |
          echo "Making scripts executable..."
          find ${{ env.SCRIPT_DIR }} -type f -name "*.sh" -exec chmod +x {} +

          echo "Running scripts..."
          for script in ${{ env.SCRIPT_DIR }}/*.sh; do
            if [ -f "$script" ]; then
              echo "--- Running $script on ${{ matrix.os }} ---"
              bash "$script"
            fi
          done
